{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\momod\\\\T-JSF-600-PAR_2\\\\irc-client\\\\src\\\\Hometalk.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Hometalk.css';\nimport ChatComponent from './Chatcomponent';\nimport socket from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hometalk() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [channels, setChannels] = useState([]);\n  const [activeChannel, setActiveChannel] = useState(null);\n\n  // Fonction pour rafraîchir la liste des channels\n  const fetchChannels = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const userId = localStorage.getItem('userId');\n      const response = await fetch(`http://localhost:5000/api/channels?userId=${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setChannels(data);\n        if (!activeChannel && data.length > 0) setActiveChannel(data[0]);\n        if (activeChannel && !data.find(c => c._id === activeChannel._id)) setActiveChannel(data[0] || null);\n      }\n    } catch (err) {\n      console.error('Erreur lors du chargement des channels:', err);\n    }\n  };\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/api/auth/userinfo', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.status === 200) {\n          setUsername(data.username);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des informations utilisateur:', error);\n      }\n    };\n\n    // Enregistrer l'utilisateur avec le socket pour recevoir les messages système\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      socket.emit('registerUser', userId);\n      console.log('✅ Utilisateur enregistré avec le socket:', userId);\n    }\n    fetchUserInfo();\n    fetchChannels();\n    // eslint-disable-next-line\n  }, []);\n\n  // Join le channel actif côté socket\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (activeChannel && userId) {\n      socket.emit('joinChannel', {\n        userId,\n        channelId: activeChannel._id\n      });\n      return () => {\n        socket.emit('quitChannel', {\n          userId,\n          channelId: activeChannel._id\n        });\n      };\n    }\n  }, [activeChannel]);\n  const handleChannelClick = channel => {\n    setActiveChannel(channel);\n  };\n\n  // Ajout : sélection automatique du channel après join/quit\n  useEffect(() => {\n    if (channels.length > 0 && (!activeChannel || !channels.find(c => c._id === activeChannel._id))) {\n      setActiveChannel(channels[0]);\n    }\n  }, [channels]);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    window.location.href = '/log';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hometalk-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mochat-logo\",\n      children: \"MoChat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Canaux\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [channels.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"channel-item\",\n          children: \"Aucun channel disponible. Utilisez /create pour en cr\\xE9er un.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }, this), channels.map(channel => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `channel-item${activeChannel && activeChannel._id === channel._id ? ' active' : ''}`,\n          onClick: () => handleChannelClick(channel),\n          children: channel.name\n        }, channel._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"username\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Se d\\xE9connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(ChatComponent, {\n        username: username,\n        channel: activeChannel,\n        channels: channels,\n        setChannels: setChannels,\n        fetchChannels: fetchChannels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Hometalk, \"0zJguPvWZC4ShanPI/IHD1B0QfM=\");\n_c = Hometalk;\nexport default Hometalk;\nvar _c;\n$RefreshReg$(_c, \"Hometalk\");","map":{"version":3,"names":["React","useState","useEffect","ChatComponent","socket","jsxDEV","_jsxDEV","Hometalk","_s","username","setUsername","channels","setChannels","activeChannel","setActiveChannel","fetchChannels","token","localStorage","getItem","userId","response","fetch","headers","data","json","ok","length","find","c","_id","err","console","error","fetchUserInfo","method","status","emit","log","channelId","handleChannelClick","channel","handleLogout","removeItem","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","_c","$RefreshReg$"],"sources":["C:/Users/momod/T-JSF-600-PAR_2/irc-client/src/Hometalk.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Hometalk.css';\r\nimport ChatComponent from './Chatcomponent';\r\nimport socket from './socket';\r\n\r\nfunction Hometalk() {\r\n  const [username, setUsername] = useState('');\r\n  const [channels, setChannels] = useState([]);\r\n  const [activeChannel, setActiveChannel] = useState(null);\r\n\r\n  // Fonction pour rafraîchir la liste des channels\r\n  const fetchChannels = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const userId = localStorage.getItem('userId');\r\n      const response = await fetch(`http://localhost:5000/api/channels?userId=${userId}`, {\r\n        headers: { 'Authorization': `Bearer ${token}` },\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setChannels(data);\r\n        if (!activeChannel && data.length > 0) setActiveChannel(data[0]);\r\n        if (activeChannel && !data.find(c => c._id === activeChannel._id)) setActiveChannel(data[0] || null);\r\n      }\r\n    } catch (err) {\r\n      console.error('Erreur lors du chargement des channels:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch('http://localhost:5000/api/auth/userinfo', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n        const data = await response.json();\r\n        if (response.status === 200) {\r\n          setUsername(data.username);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des informations utilisateur:', error);\r\n      }\r\n    };\r\n    \r\n    // Enregistrer l'utilisateur avec le socket pour recevoir les messages système\r\n    const userId = localStorage.getItem('userId');\r\n    if (userId) {\r\n      socket.emit('registerUser', userId);\r\n      console.log('✅ Utilisateur enregistré avec le socket:', userId);\r\n    }\r\n    \r\n    fetchUserInfo();\r\n    fetchChannels();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Join le channel actif côté socket\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem('userId');\r\n    if (activeChannel && userId) {\r\n      socket.emit('joinChannel', { userId, channelId: activeChannel._id });\r\n      return () => {\r\n        socket.emit('quitChannel', { userId, channelId: activeChannel._id });\r\n      };\r\n    }\r\n  }, [activeChannel]);\r\n\r\n  const handleChannelClick = (channel) => {\r\n    setActiveChannel(channel);\r\n  };\r\n\r\n  // Ajout : sélection automatique du channel après join/quit\r\n  useEffect(() => {\r\n    if (channels.length > 0 && (!activeChannel || !channels.find(c => c._id === activeChannel._id))) {\r\n      setActiveChannel(channels[0]);\r\n    }\r\n  }, [channels]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    window.location.href = '/log';\r\n  };\r\n\r\n  return (\r\n    <div className=\"hometalk-container\">\r\n      <div className=\"mochat-logo\">MoChat</div>\r\n      <div className=\"channel-box\">\r\n        <h3>Canaux</h3>\r\n        <ul>\r\n          {channels.length === 0 && <li className=\"channel-item\">Aucun channel disponible. Utilisez /create pour en créer un.</li>}\r\n          {channels.map(channel => (\r\n            <li key={channel._id} className={`channel-item${activeChannel && activeChannel._id === channel._id ? ' active' : ''}`} onClick={() => handleChannelClick(channel)}>\r\n              {channel.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"profile-card\">\r\n        <h2 className=\"username\">{username}</h2>\r\n      </div>\r\n      <button className=\"logout-button\" onClick={handleLogout}>\r\n        Se déconnecter\r\n      </button>\r\n      <div className=\"content\">\r\n        <ChatComponent username={username} channel={activeChannel} channels={channels} setChannels={setChannels} fetchChannels={fetchChannels} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hometalk;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}